name: Devhub Migration Check

env:
  DEVHUB_BASE_URL: https://dev-hub-0008-api.dev.core-services.developer-platform.io
  DEVHUB_MIGRATION_SOURCE_DIR: sdbmigration
  DEVHUB_OUTPUT_DIR: devhub

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]
    paths:
      - "catalog-info.yaml"
      - "backstage/**/*.yaml"
      - "backstage/**/*.yml"
      - "backstage/**/*.*.yaml"
      - "backstage/**/*.*.yml"
      - "sdbmigration/**/*.yaml"
      - "sdbmigration/**/*.yml"
      - "sdbmigration/**/*.*.yaml"
      - "sdbmigration/**/*.*.yml"
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  translate:
    name: DevHub Migration Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - name: Checkout Migration Tools Repository
        uses: actions/checkout@v3
        with:
          repository: deliveryhero/dh-devhub-migrator
          path: tools
          token: ${{ secrets.ACCESS_TOKEN }}
          ref: main
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Python Dependencies And Requirements
        run: |
          cd tools
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint Python Files with flake8
        run: |
          cd tools
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run Migration Tool
        run: python tools/extract_entities.py  --SOURCE_DIR $DEVHUB_MIGRATION_SOURCE_DIR --OUTPUT_DIR $DEVHUB_OUTPUT_DIR 
      - name: Get Generated Yaml Files
        id: lister
        run: |
          python3 tools/list_files.py --INPUT_PATH=devhub --INPUT_TYPE=.yaml
      - name: Run Devhub CLI Save
        run: |
          echo "Found ${{ steps.lister.outputs.path_count }} file(s) with this extension:"
          for i in ${{ steps.lister.outputs.paths }}; do
            echo "---------------------> Start Processing File: $i"
            python tools/cli/devhub_cli.py save -i $i -eo ${i/\.yaml/.error.json} -dr
          done
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Darian Campos
          author_email: darian.campos@pedidosya.com
          message: 'Migration success'
          add: 'devhub/ --force'

      - name: Get Generated Error Files
        id: listerError
        run: |
          python3 tools/list_files.py --INPUT_PATH=devhub --INPUT_TYPE=.error.json
      - name: Validate Devhub CLI output
        id: validation
        run: |
          echo "-------------"
          echo "${{ steps.listerError.outputs.path_count }}"
          echo "-------------"
          echo "IS_VALID=true" >> $GITHUB_OUTPUT
          if [[ ${{ steps.listerError.outputs.path_count }} -ge 0 ]]; then
            echo "IS_VALID=false" >> $GITHUB_OUTPUT
          fi
      - name: Add Error Label
        uses: actions-ecosystem/action-add-labels@v1
        if: ${{ steps.validation.outputs.IS_VALID == 'false' }}
        with:
          labels: devhub-error
      - name: Remove Error Label
        uses: actions-ecosystem/action-remove-labels@v1
        if: ${{ steps.validation.outputs.IS_VALID == 'true' }}
        with:
          labels: devhub-error
      - name: Add OK Label
        uses: actions-ecosystem/action-add-labels@v1
        if: ${{ steps.validation.outputs.IS_VALID == 'true' }}
        with:
          labels: devhub-ok
      - name: Remove Ok Label
        uses: actions-ecosystem/action-remove-labels@v1
        if: ${{ steps.validation.outputs.IS_VALID == 'false' }}
        with:
          labels: devhub-ok
      - name: Fail Checks
        if: ${{ steps.validation.outputs.IS_VALID == 'false' }}
        run: exit 1
